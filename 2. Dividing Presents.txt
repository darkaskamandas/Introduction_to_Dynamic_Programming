namespace Aloe
{
    using System;
    using System.Collections.Generic;
    using System.Linq;

    public class StartUp
    {
        public static void Main()
        {
            var presents = Console.ReadLine()
                .Split()
                .Select(int.Parse)
                .ToArray();

            var sums = CalcSums(presents);

            var totalScore = presents.Sum();
            var bobScore = GetBobScore(sums, totalScore);
            var alanScore = totalScore - bobScore;

            var alaPresents = GetPresents(sums, alanScore);

            Console.WriteLine($"Difference: {bobScore - alanScore}");
            Console.WriteLine($"Alan:{alanScore} Bob:{bobScore}");
            Console.WriteLine($"Alan takes: {string.Join(" ", alaPresents)}");
            Console.WriteLine("Bob takes the rest.");
        }
        private static List<int> GetPresents(Dictionary<int, int>sums, int target)
        {
            var presents = new List<int>();

            while (target != 0)
            {
                var present = sums[target];
                presents.Add(present);

                target -= present;
            }
            return presents;
        }
        private static int GetBobScore(Dictionary<int, int> sums, in int totalScore)
        {
            var bobScore = totalScore / 2;
            while (!sums.ContainsKey(bobScore))
            {
                bobScore += 1;
            }
            return bobScore;
        }
        private static Dictionary<int, int>CalcSums(int[] numbers)
        {
            var result = new Dictionary<int, int> { { 0, 0 } };
            foreach (var number in numbers)
            {
                var sums = result.Keys.ToArray();

                foreach (var sum in sums)
                {
                    var newSum = sum + number;

                    if (!result.ContainsKey(newSum))
                    {
                        result.Add(newSum, number);
                    }
                }
            }
            return result;
        }
    }
}